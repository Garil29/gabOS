#!/bin/bash

set -e

# ===============================
# Instalador desatendido para gabOS
# Basado en Arch Linux
# ===============================

function log() {
  echo -e "\033[1;32m[INFO]\033[0m $1"
}

function error_exit() {
  echo -e "\033[1;31m[ERROR]\033[0m $1"
  exit 1
}

# Asume ejecuci√≥n como root, obtiene usuario real
USER_REAL=${SUDO_USER:-$(logname 2>/dev/null || echo '')}
HOME_REAL=$(eval echo ~$USER_REAL)

function ensure_pkg() {
  for pkg in "$@"; do
    if ! pacman -Q "$pkg" &>/dev/null; then
      log "Instalando $pkg..."
      pacman -S --noconfirm "$pkg" || error_exit "No se pudo instalar $pkg."
    else
      log "$pkg ya est√° instalado."
    fi
  done
}

log "Actualizando sistema..."
pacman -Syu --noconfirm || error_exit "Error al actualizar el sistema."

log "Instalando herramientas base y dependencias esenciales..."
ensure_pkg curl unzip htop base-devel cargo git spotify-launcher waybar

# ======= DETECCI√ìN Y CONFIGURACI√ìN AUTOM√ÅTICA DEL TECLADO =======
log "Detectando layout de teclado..."

LAYOUT=""
if command -v localectl &>/dev/null; then
    LAYOUT=$(localectl status | grep "VC Keymap" | awk '{print $3}')
elif [ -f /etc/default/keyboard ]; then
    LAYOUT=$(grep XKBLAYOUT /etc/default/keyboard | cut -d'=' -f2 | tr -d '"')
fi

# Si no se detect√≥, usa 'us' como predeterminado
if [ -z "$LAYOUT" ]; then
    LAYOUT="us"
fi

log "Layout detectado: $LAYOUT"

# Aplicar layout en consola (TTY)
loadkeys "$LAYOUT"

# Aplicar layout en entorno gr√°fico si existe setxkbmap
if command -v setxkbmap &>/dev/null; then
    setxkbmap "$LAYOUT"
fi

# Persistencia: guardar en /etc/default/keyboard si es posible
if [ -f /etc/default/keyboard ]; then
    sed -i "s/XKBLAYOUT=.*/XKBLAYOUT=\"$LAYOUT\"/" /etc/default/keyboard
fi
# ======= FIN DETECCI√ìN Y CONFIGURACI√ìN DE TECLADO =======

log "Instalando Helix y configurando como editor por defecto..."
ensure_pkg helix

# A√±adir variables de entorno si no existen (sin 'export')
for var in "EDITOR=hx" "VISUAL=hx"; do
  grep -qxF "$var" /etc/environment || echo "$var" >> /etc/environment
done

log "Agregando usuario '$USER_REAL' al grupo wheel..."
usermod -aG wheel "$USER_REAL" || error_exit "No se pudo agregar al grupo wheel."

log "Instalando Sway y componentes Wayland..."
ensure_pkg sway wofi kitty xorg-xwayland xdg-utils xdg-desktop-portal-wlr

# ======= NUEVA SECCI√ìN: Configuraci√≥n b√°sica sway =======
log "Creando configuraci√≥n b√°sica de Sway para $USER_REAL..."
SWAY_CONFIG_DIR="$HOME_REAL/.config/sway"
SWAY_CONFIG_FILE="$SWAY_CONFIG_DIR/config"

runuser -u "$USER_REAL" -- bash -c "
mkdir -p '$SWAY_CONFIG_DIR'
cat > '$SWAY_CONFIG_FILE' << 'EOF'
# Tecla principal (Super/Windows)
set \$mod Mod4

# Configurar layout por defecto a latam
input * {
    xkb_layout latam
}

# Lanzar terminal
bindsym \$mod+Space exec kitty

# Cerrar ventana
bindsym \$mod+q kill

# Reiniciar Sway
bindsym \$mod+Shift+c reload

# Salir de sway
bindsym \$mod+Shift+e exit

# Usar wofi
bindsym \$mod+x exec wofi --show drun

# Ejecutar en inicio
exec_always waybar
"
# ======= FIN SECCI√ìN SWAY =======

# ======= NUEVA SECCI√ìN: Tema personalizado para Wofi =======
log "Creando tema personalizado para Wofi en $USER_REAL..."
WOFI_CONFIG_DIR="$HOME_REAL/.config/wofi"
WOFI_STYLE_FILE="$WOFI_CONFIG_DIR/style.css"

runuser -u "$USER_REAL" -- bash -c "
mkdir -p '$WOFI_CONFIG_DIR'
cat > '$WOFI_STYLE_FILE' << 'EOF'
window {
    background-color: rgba(0, 0, 0, 0.2); /* fondo transparente */
    color: #ff2222; /* rojo brillante para el texto */
}

#entry, #input {
    background: transparent;
    color: #ff2222; /* rojo brillante */
}

#entry:selected {
    background: rgba(0, 139, 0, 0.7); /* verde oscuro y un poco transparente */
    color: #ff2222; /* rojo brillante para el texto seleccionado */
}
EOF
"
# ======= FIN TEMA WOFI =======

# ======= CONFIGURACI√ìN BASE DE WAYBAR =======
log "Creando configuraci√≥n base de Waybar para $USER_REAL..."
WAYBAR_CONFIG_DIR="$HOME_REAL/.config/waybar"
WAYBAR_CONFIG_FILE="$WAYBAR_CONFIG_DIR/config"
WAYBAR_STYLE_FILE="$WAYBAR_CONFIG_DIR/style.css"

runuser -u "$USER_REAL" -- bash -c "
mkdir -p '$WAYBAR_CONFIG_DIR'
cat > '$WAYBAR_CONFIG_FILE' << 'EOF'
{
    \"layer\": \"top\",
    \"position\": \"top\",
    \"modules-left\": [\"sway/workspaces\", \"sway/mode\", \"custom/music\"],
    \"modules-center\": [],
    \"modules-right\": [
        \"custom/mail\",
        \"network\",
        \"pulseaudio\",
        \"battery\",
        \"clock\"
    ],
    \"sway/workspaces\": {
        \"format\": \"{name}\"
    },
    \"custom/music\": {
        \"format\": \"üéµ {output}\",
        \"exec\": \"playerctl metadata --format '{{artist}} - {{title}}' || echo 'Sin m√∫sica'\",
        \"interval\": 5
    },
    \"custom/mail\": {
        \"format\": \"‚úâÔ∏è {output}\",
        \"exec\": \"echo '5'\",
        \"interval\": 60
    },
    \"network\": {
        \"format-wifi\": \"Ôá´  {essid} ({signalStrength}%)\",
        \"format-ethernet\": \"ÔÉÅ  {ifname}\",
        \"format-disconnected\": \"‚õî Sin red\"
    },
    \"pulseaudio\": {
        \"format\": \"üîä {volume}%\"
    },
    \"battery\": {
        \"format\": \"{capacity}% {icon}\",
        \"format-icons\": [\"ÔâÑ\", \"ÔâÉ\", \"ÔâÇ\", \"ÔâÅ\", \"ÔâÄ\"]
    },
    \"clock\": {
        \"format\": \"ÔÄó {:%H:%M}\",
        \"tooltip-format\": \"{:%A, %d %B %Y}\"
    }
}
EOF

cat > '$WAYBAR_STYLE_FILE' << 'EOF'
* {
    font-family: \"Fira Sans\", \"JetBrainsMono\", sans-serif;
    font-size: 14px;
}

window#waybar {
    background: rgba(35, 39, 42, 0.95);
    border-radius: 15px;
    margin: 12px 12px 0 12px;
    padding: 2px 10px;
    color: #cdd6f4;
}

#workspaces button {
    background: transparent;
    border-radius: 10px;
    padding: 0 8px;
    color: #a6adc8;
}

#workspaces button.active {
    background: #89b4fa;
    color: #1e1e2e;
}

#clock, #battery, #network, #pulseaudio, #custom-music, #custom-mail {
    margin: 0 8px;
    padding: 0 10px;
    border-radius: 10px;
    background: rgba(49, 54, 63, 0.6);
}

#battery.charging {
    color: #a6e3a1;
}

#battery.critical {
    color: #f38ba8;
    animation: blink 1s infinite alternate;
}

@keyframes blink {
    to { opacity: 0.6; }
}
EOF
"
# ======= FIN WAYBAR =======

log "Instalando sonido (Pipewire)..."
ensure_pkg pipewire wireplumber alsa-utils

log "Instalando ly (session manager)..."
ensure_pkg ly

log "Habilitando ly como display manager..."
systemctl enable ly.service || error_exit "No se pudo habilitar ly."

# === INSTALAR YAY si no existe ===
if ! command -v yay &>/dev/null; then
  log "Instalando yay (helper de AUR)..."
  runuser -u "$USER_REAL" -- bash -c "
    cd ~
    rm -rf yay
    git clone https://aur.archlinux.org/yay.git || exit 1
    cd yay
    makepkg -si --noconfirm || exit 1
    cd ..
    rm -rf yay
  " || error_exit "Fall√≥ la instalaci√≥n de yay."
fi

# === INSTALAR BRAVE (desde AUR) ===
log "Instalando Brave Browser (desde AUR)..."
runuser -u "$USER_REAL" -- yay -S --noconfirm brave-bin || error_exit "No se pudo instalar Brave."

# Configurando brave a modo oscuro
log "Preconfigurando Brave para usar tema oscuro..."
BRAVE_PREFS_DIR="$HOME_REAL/.config/BraveSoftware/Brave-Browser/Default"
runuser -u "$USER_REAL" -- bash -c "
mkdir -p '$BRAVE_PREFS_DIR'
cat > '$BRAVE_PREFS_DIR/Preferences' <<'EOF'
{
  \"profile\": {
    \"theme\": {
      \"use_system\": false
    }
  },
  \"browser\": {
    \"dark_mode\": true
  },
  \"extensions\": {
    \"theme\": \"chrome://theme/id/9baf8bca-2d9a-4a8e-9c9e-7e0eecaa1e19\"
  }
}
EOF
"
# === LIMPIEZA DE RESIDUOS DE INSTALACI√ìN ===
log "Limpiando residuos de instalaci√≥n..."

# Limpiar cach√© de paquetes descargados
pacman -Scc --noconfirm

# Eliminar dependencias hu√©rfanas (si las hay)
if pacman -Qtdq &>/dev/null; then
  pacman -Rns --noconfirm $(pacman -Qtdq)
fi

# Limpiar cach√© de yay (AUR helper), si existe
if command -v yay &>/dev/null; then
  yay -Sc --noconfirm
fi

# Limpiar archivos temporales
rm -rf /tmp/*

log "Instalaci√≥n b√°sica completada."
echo -e "\nReinicia el sistema para iniciar sesi√≥n."
echo -e "\n gabOS est√° listo. ¬°Buen hacking, $USER_REAL!"
read -p "Presiona Enter para reiniciar..."

reboot
